<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA69AAAOvQFH+5CtAAADJElE
        QVQ4T3WRa0iTURzGj9t72cWKxKC+GER9SKjoRlAfgqgwspL6EkTYheyizmnOpjNnWVaWlGQRRekuTU2M
        rCgLqQ/prOk25+Z9qWVpVtoVLYye/u98IQx64M97OOd5fs/hvOxfmc1M8e56VMLwo41VI483uj7XbnKO
        PFhfMng5Mla2/F8/HXPiv9TGYejWCrwuFPG2SI2BYg3eFk/Dx3trMfpky8DX6xHRsn2yxsqi8wbKViKY
        p0RPgRr9F6ag/7yaIBq8KQpH3zk1Xp4W8PHhZoyWzFolxyY0XDwzpr9kCTrMHLpPh6P3rBa9BSLe2Faj
        /8Yy9BWqaKag54wWnbkKDFWtQcA8I1yOM/audPH7gEmJ9jw1uvO1IUhXDoOk0Q9BdB9nCBaEI5ivQecJ
        Dfm0GLYtuBEK393HLe8qjEJLtoj2Y2QgSNdJLTpMDL8JMDYYQCfBJHDXCdo/rkFrjoBXF2cjBGg2T09r
        NgrwZ4nw56jRmqsKmQJGhvGxL/garEUbwaTbtVFBm1kFv0lEZ34kbDuEaOY2iKc8BgG+TBqTCoGjBDGr
        4c9g+DHyCp88NvgJ1pajomZ16KYtmSICJg1u7uRWM5eey3KnCXBniJBu0pylgo/Gm8YwNtSK93VF8BHM
        n61CCxVIRZ4jBMngYdnOL2bVu5TrGtN4NB2mAwMPr0ECifCmM/Ra4tB+bj68GQp4KeShEqnInc7DR7cO
        vYEkbyo37tLzaNRzaCSQO11Ak55e/toGdFxYiqZURnB5P1VAYyqHVgNfI8cZCxoUKQ2JHBp0Srh0PF6k
        0Dph4jf++j4I535GIR6uFOmMJlkJj06YJ8cn5EsJe1x/KAwNSRyeJ3NwJjI050bBY4yAMykMz2m/gYLO
        gwp0pLNEOTZZ1Hqlbg9DHbXXHwzDM2qWpv4ADX3r9jJqV+yQ7X9VU1Mz11FVvabEURFTcSn7/APj8m9P
        EzjUx1NwF8OTQ1Nx3xzz2nG1QG+x346tIK+UkeOMVVZWLrTb7VutVutu682yJIujKrm0vDrTUnbHKI20
        tjoqdVa7Q2ez2faQb1t5efkixhj7AyHL9xFFxm7dAAAAAElFTkSuQmCC
</value>
  </data>
</root>