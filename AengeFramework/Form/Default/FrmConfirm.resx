<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAOvgAA
        Dr4B6kKxwAAAAx9JREFUOE9tkmlIVFEYhs/cucssVhQFBWUQ9SOhoo2gfghSZBAl9SeIyGx1G0dzbHTM
        sSwzS1IyiKJsFkdNjKwoiagfuZQ6M44zLqNTWi5lWdGCZoVv351CsDzwcs/yfs/7cc9RsH+G2cy42NDQ
        A8L8ZZsVCraA47hf4z/G/GO9rqp5ccP3/vVPWo85Fu39/CgKQzfX4XWBhIEiNQaLNRgonoHhuxsx8nj7
        4Jdrs8KmhIyWheUMlq1HIEeJl/lq9BVOQ98FNUE06C8KQe95NV7kiRh+sA0jJfM2TIJ8KJ4b2VeyCp1m
        Ht15Ieg5p0VPvoR+Wzj6rq9Bb4GKNA0vz2rhz+YwVBUBn3lOyATk7Y2V73wmJTpy1OjO1QYhXVkM8hh5
        H0D3SYZAfggCuRr4T2nIp8UH27LrQcCdg/zaroJQtGZK6DhBBoJ0ndai08QwToDRNz74CSaDu07R/kkN
        2rJEvLq4EEFAi3lmSotRhDdDgjdLjbZsVdDkMzL8HP2ML4FHaCeY3F07BbSbVfCaJPhzZ8O2WwxjToN0
        xmUQ4UknmVTwHSeIWQ1vGsP3j6/wyWWDl2DtWSpKVgc7bU2X4DNpULqHD2eNej7DmSLCmSZB7qQlQwUP
        yZ3CMDrUhne1RfAQzJupQisFyEGuYwRJE2DZJaxk1dHKTU0pApqP0oFBgNsggyS4Uxl6LFHoOL8U7jQO
        bipyUYgc5EwV4KGuJ27Bncz/bNQLaNLzaCKQM1VEs57+/NUt6CxcjeZkRvC/+8kimpJ5tBmEmglAwMAl
        NcTzaNAp0agT8DyJ5of+XOOvb29Qf5hRkYDGJPmMlKiESycumfSYPEmKh3VxCjQk8HiWyKM+nqElOxQu
        4yzUJyjwjPYbqLA+lkNnKouf8jlT6uXaGIZaSq+LVeApJcuqO0Kib+1+Runc7v+Ka2pqFjuqqiNKHBWR
        FZcyL9w3rv365BCPur1UGM3wOG467pkjXzuu5Ost9ltbK8gr10yAKisrl9vt9h1Wq3WftbQsweKoSrxR
        Xp1uKbttlCXPrY5KndXu0Nlsthjy7SwvL18hA34D2Cz0iYn3KjAAAAAASUVORK5CYII=
</value>
  </data>
</root>