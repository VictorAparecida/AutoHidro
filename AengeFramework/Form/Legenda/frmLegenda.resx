<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAADa0lEQVRYR8WXz05TQRTG+wYmriilpYUW
        SkuBUmih/C3QFbjgLYjvoG5F5UFY+gIuTVy50YWJJrLQhcaYuFTjOL8TvptbpgFHIS6+5Jy5c77vm5kz
        t7cZ59x/RTDw+eunK5Ev5DPFYvGwXCk/n5qe+gl8/KJYKh7ybCw/dingkN6AOLgoNgzlcvmkMddw7U7b
        ra2vGTqdjmOMZ4VCYaiwAIf0BsQBDwvjhdLE5MTTylTli1+dS2OmNuNarZbb2NxwvV7PnX14byBmjGfM
        uVgHF5xwX2pgvDheq9Vr3yBaWV1x3bVuskqwvrHutnvbbq+/5za3Nt2jJ8d5QMwYz5iTroEDLjjhRkN6
        gYHl9vIzthOi3b1dIwX7B/vOOx+GW+cYGGdXdnZ3knq44IQbDekFBjornR9b21tWIEDU7/d/eWI7okql
        YvBbmuG8AbHG/XZnjh8/zLMTaR4ANxrSCwzQWL2dnokK5GxjfbbufLdfCW/CNRoN2/40j7jQkF5gwLuz
        SRfBGXe7Xdz/ETDMaodx8Vx6gQHccVY3iUt3oN1um/ObBBrSCwwsLS/ZfQacobpaV0p5LKgVLxrSCwy0
        llp2j4G/LhRb5xMrL5VKUahWq1YvXjSkFxhYbC0mq8XpdHXaQKzcv/OjoHrxoiG9wECz2XSr3VUD3crb
        C6i7iZkTA9WLlzHpBQYWmgv22gR0q86QOJ3HglrxoiG9wMD8wnyy2uZik2LrAWLl/gclCv7lZPXiRUN6
        gQF+UtVwTJwsTxqIlfvf/CioXrxoSC8wMNuYTRqOZpmbnzMQK2dODFQvXsakFxjgfc81AedbbkgdwV+B
        WvGiIb3AgP+9TsSY6IutB4iV53K5KPiraPXiRUN6gQG+ZuhSUK/Xnf/2MxArH82NRkH14kVDeoGB6kw1
        aTiaBbeAWDlzYqB68TImvcAAby01Hs2iM1RDKY+FmhGgIb3AAB+QWi1OfbH1gFZDnM1mo8AXE7XiRUN6
        gQH/OZWsFqe6y8TKR7IjUVC9eNGQXmjAf06p49Of18TKmRMD1YuXMekFBmgSNd5NAQ3pBQaO7h5957y0
        4usG3GhILzDw+s2rU36zhxVfB+BGQ3qBAd/lt9+dvf14/8E9d3DnwBxfB+CCE240pDfMAOCfzonHS4+B
        +/wPgAtOuM/1XOY3iG0hLZMQ8bgAAAAASUVORK5CYII=
</value>
  </data>
</root>